# Global configuration
events {
    worker_connections 1024;  # Number of connections per worker
}

http {
    include       /etc/nginx/mime.types;  # MIME types for file handling
    default_type  application/octet-stream;  # Default MIME type

    # Logging
    access_log /var/log/nginx/access.log;  # Access logs
    error_log /var/log/nginx/error.log;    # Error logs

    # Performance optimizations
    sendfile        on;  # Enable efficient file sending
    tcp_nopush      on;  # Optimize TCP packets
    tcp_nodelay     on;  # Disable Nagle's algorithm

    # Timeouts
    keepalive_timeout  65;  # Keepalive timeout for clients
    client_max_body_size 10M;  # Max upload size

    # GZIP compression
    gzip on;  # Enable GZIP compression
    gzip_disable "msie6";  # Disable GZIP for old IE browsers
    gzip_vary on;  # Add "Vary: Accept-Encoding" header
    gzip_proxied any;  # Compress all proxied content
    gzip_comp_level 6;  # Compression level (1-9)
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;  # File types to compress

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;  # Allowed SSL/TLS protocols
    ssl_ciphers HIGH:!aNULL:!MD5;   # Allowed cipher suites

    # DNS resolver
    resolver 8.8.8.8 1.1.1.1 valid=300s;  # Use Google and Cloudflare DNS
    resolver_timeout 5s;  # DNS resolver timeout

    # Main server block
    server {
        listen 80;  # Listen on port 80 (HTTP)
        server_name _;  # Match any server name

        # Frontend location
        location / {
            proxy_pass https://twitter-mvp-dashboard.onrender.com/;  # Forward requests to the frontend
            proxy_http_version 1.1;  # Use HTTP/1.1 for proxying

            # SSL settings for upstream
            proxy_ssl_verify on;  # Verify upstream SSL certificate
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;  # Trusted CA certificates
            proxy_ssl_session_reuse on;  # Reuse SSL sessions

            # Headers
            proxy_set_header Host $host;  # Pass the original host
            proxy_set_header X-Real-IP $remote_addr;  # Pass the client's IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Pass the forwarded IP chain
            proxy_set_header X-Forwarded-Proto $scheme;  # Pass the original protocol (HTTP/HTTPS)

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;  # Handle WebSocket upgrades
            proxy_set_header Connection 'upgrade';  # Handle WebSocket connections

            # Timeouts
            proxy_connect_timeout 90s;  # Timeout for connecting to upstream
            proxy_send_timeout 90s;  # Timeout for sending data to upstream
            proxy_read_timeout 90s;  # Timeout for reading data from upstream
        }

        # Backend API location
        location /api/ {
            proxy_pass https://twitter-be-6riu.onrender.com/;  # Forward requests to the backend
            proxy_http_version 1.1;  # Use HTTP/1.1 for proxying

            # SSL settings for upstream
            proxy_ssl_verify on;  # Verify upstream SSL certificate
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;  # Trusted CA certificates
            proxy_ssl_session_reuse on;  # Reuse SSL sessions

            # Headers
            proxy_set_header Host $host;  # Pass the original host
            proxy_set_header X-Real-IP $remote_addr;  # Pass the client's IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Pass the forwarded IP chain
            proxy_set_header X-Forwarded-Proto $scheme;  # Pass the original protocol (HTTP/HTTPS)

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;  # Allow all origins
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;  # Allowed HTTP methods
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;  # Allowed headers
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;  # Exposed headers

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;  # Cache preflight response for 20 days
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;  # No content response for preflight
            }

            # Timeouts
            proxy_connect_timeout 90s;  # Timeout for connecting to upstream
            proxy_send_timeout 90s;  # Timeout for sending data to upstream
            proxy_read_timeout 90s;  # Timeout for reading data from upstream
        }

        # Error pages
        error_page 404 /404.html;  # Custom 404 error page
        error_page 500 502 503 504 /50x.html;  # Custom 50x error page
        location = /50x.html {
            root /usr/share/nginx/html;  # Path to error pages
        }
    }
}